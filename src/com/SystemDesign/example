https://1o24bbs.com/t/design-ticket-booking-system/22078

Amazon System Design | Flipkart System Design | ECommerce Application System Design and Architecture
https://www.youtube.com/watch?v=EpASu_1dUdE&feature=youtu.be&ab_channel=codeKarle


1. Load-balancing
2. Caching  -> when DB goes down, CDN to cache image/video
3. Database schema design
4. Slave-master replications  -> replicate DB, master server read/write, slave server only read
5. Database sharding
6. API design


Design instgram/ twitter
read write seperation, in case write take all connections
user timeline  -> pre- compute
fan out -> whenever user wants a timeline, just querry the timeline
push -> when a user sends , update all ppl who followed him their user timeline. issue: trump with a lot of followers
pull -> consistent pull from the server, see any updates from my followers
hybrid solution -> user not has many follwers/ a lot of writes, using push. otherwise no


dropbox
update chunck by chunck not entire file
Desktop Client Application monitors the folders that are identified as workspace or sync folders and synchronizes them
with the remote Cloud Storage.
The Desktop Client interacts with the Synchronization Service to handle file metadata updates
(e.g. file name, size, modification date, etc.).
It also interacts with the backend Cloud Storage for storing the actual files.


chat
1.clients and receiver connect to message server, websockets, write messgae to db
2. write heavy cansendra , user id partitionto support range key hot code date sepeartion
3.table store user id and the server id they connect
4,cache on top of db to retrieve latedst 15 msgs
5.. group chat, store group chat id, users, find all users and send messages